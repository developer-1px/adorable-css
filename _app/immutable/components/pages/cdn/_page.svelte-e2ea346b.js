import{S as h,i as f,s as p,k as v,q as y,l as g,m as E,r as b,h as m,n as S,b as _,C as L,B as d}from"../../../chunks/index-5e2bc00b.js";import{r as x,g as q}from"../../../chunks/atomizer-a70c0d22.js";function A(s){let e,t;return{c(){e=v("div"),t=y("cdn no vite!"),this.h()},l(r){e=g(r,"DIV",{id:!0});var a=E(e);t=b(a,"cdn no vite!"),a.forEach(m),this.h()},h(){S(e,"id","test c(red) font(100) p(10)")},m(r,a){_(r,e,a),L(e,t)},p:d,i:d,o:d,d(r){r&&m(e)}}}if(typeof document<"u"){const s=document.documentElement,e=document.createElement("style");s.querySelector("head").appendChild(e);const t=new Set,r=()=>e.innerHTML=x+q([...t]).join(`
`);new MutationObserver(c=>{c.forEach(n=>{var l,u;(l=n.oldValue)==null||l.split(/\s+/).forEach(i=>t.delete(i)),Array.from((u=n.target)==null?void 0:u.classList).forEach(i=>t.add(i)),r()})}).observe(s,{attributes:!0,subtree:!0,childList:!0,attributeOldValue:!0,attributeFilter:["class"]});const o=()=>{Array.from(document.querySelectorAll("*[class]")).forEach(c=>Array.from(c.classList).forEach(n=>t.add(n))),r()};document.readyState==="loading"?document.addEventListener("readystatechange",()=>{o(),document.removeEventListener("readystatechange",o)}):o()}class w extends h{constructor(e){super(),f(this,e,null,A,p,{})}}export{w as default};
