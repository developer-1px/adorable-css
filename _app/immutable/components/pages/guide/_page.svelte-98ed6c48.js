import{S as fa,i as ma,s as va,k as l,q as r,a as c,l as e,m as p,r as u,h as a,c as i,n as H,b as o,C as n,B as fs,w as Da,x as Ha,y as ha,f as Ma,t as qa,z as Oa}from"../../../chunks/index-5e2bc00b.js";function Pa(ms){let k,_,b,f,d,vs,Y,h,_s,Z,y,_a='<code class="language-sh"><span class="token function">npm</span> i <span class="token parameter variable">-D</span> adorable-css</code>',ss,M,j,ds,as,E,A,Es,Ss,B,bs,ws,U,Ls,ns,q,ys,ts,S,N,Cs,xs,z,Is,Rs,G,Ds,ls,C,da=`<code class="language-ts"><span class="token comment">// vite.config.js</span>
<span class="token keyword">import</span> <span class="token punctuation">&#123;</span>adorableCSS<span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"adorable-css/vite"</span> <span class="token comment">// &lt;-</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
  plugins<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">adorableCSS</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">...</span><span class="token punctuation">]</span> <span class="token comment">// &lt;- plugin을 맨 처음에 등록합니다.</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code>`,es,x,Ea=`<code class="language-tsx"><span class="token comment">// main.tsx</span>
<span class="token keyword">import</span> <span class="token string">"@adorable.css"</span> <span class="token comment">// &lt;- virtual css를 import 합니다.</span>

<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">"react"</span>
<span class="token keyword">import</span> ReactDOM <span class="token keyword">from</span> <span class="token string">"react-dom"</span>
<span class="token keyword">import</span> <span class="token string">"./index.css"</span>
<span class="token keyword">import</span> <span class="token punctuation">&#123;</span>App<span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"./App"</span>

ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">React.StrictMode</span></span><span class="token punctuation">></span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">App</span></span><span class="token punctuation">/></span></span><span class="token plain-text">
  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">React.StrictMode</span></span><span class="token punctuation">></span></span><span class="token punctuation">,</span>
  document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"root"</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span></code>`,ps,O,Hs,os,I,Sa='<code class="language-sh"><span class="token function">npm</span> i <span class="token parameter variable">-D</span> adorable-css</code>',cs,R,ba=`<code class="language-tsx"><span class="token comment">// main.tsx</span>

<span class="token keyword">import</span> <span class="token string">"adorable-css"</span></code>`,is,m,V,hs,Ms,J,qs,Os,K,Ps,$s,Q,Ts,rs,P,js,us,v,g,As,Bs,F,Us,Ns,W,zs,Gs,X,Vs,ks,D,wa=`<code class="language-html">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://unpkg.com/adorable-css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code>`;return{c(){k=l("h1"),_=r("AdorableCSS"),b=c(),f=l("blockquote"),d=l("p"),vs=r("⚡️ Rapid On-Demand Atomic CSS framework"),Y=c(),h=l("h2"),_s=r("Getting Started"),Z=c(),y=l("pre"),ss=c(),M=l("blockquote"),j=l("p"),ds=r("라이브러리 설치 후 3가지 방법으로 사용할 수 있습니다."),as=c(),E=l("ol"),A=l("li"),Es=r("vite 기반의 프로젝트를 사용하고 있다면 vite 플러그인을 사용하는 것을 추천합니다. vite 플러그인으로 만들경우 런타임 비용이 0이 됩니다."),Ss=c(),B=l("li"),bs=r("그 외에도 css in js 방식으로 사용할 수 있습니다."),ws=c(),U=l("li"),Ls=r("CDN을 통해서 설치없이도 간편하게 사용할 수 있습니다."),ns=c(),q=l("h3"),ys=r("Vite (Recommanded)"),ts=c(),S=l("ul"),N=l("li"),Cs=r("Build-time에서 최종 css를 만들어냅니다. (zero run-time)"),xs=c(),z=l("li"),Is=r("최종적으로 만들어진 css를 통해서 런타임 비용을 더 줄일 수 있고 css의 캐싱 기능을 더 활용할 수 있습니다."),Rs=c(),G=l("li"),Ds=r("단, 빌드시에만 css를 만들어내기 때문에 동적으로 class를 추가하면 바로 적용되지 않습니다."),ls=c(),C=l("pre"),es=c(),x=l("pre"),ps=c(),O=l("h3"),Hs=r("CSS in JS"),os=c(),I=l("pre"),cs=c(),R=l("pre"),is=c(),m=l("ul"),V=l("li"),hs=r("스크립트를 통해서 css를 동적으로 생성하여 적용합니다."),Ms=c(),J=l("li"),qs=r("런타임 비용이 있습니다. (하지만 최소한의 비용입니다.)"),Os=c(),K=l("li"),Ps=r("css in js 방식을 사용하고 싶다면 이 방법을 사용하세요."),$s=c(),Q=l("li"),Ts=r("100% 동적생성 방식이기 때문에 런타임에 class를 추가하면 바로 적용됩니다."),rs=c(),P=l("h3"),js=r("CDN"),us=c(),v=l("ul"),g=l("li"),As=r("⛱ vite, webpack, postcss등 다른 복잡한 설정 없이 그냥 script 한줄만 추가하면 adorableCSS를 사용할 수 있습니다."),Bs=c(),F=l("li"),Us=r("⚡️ adorableCSS를 간편하게 쓰는 방법! body 맨 아래 스크립트만 추가하면 됩니다."),Ns=c(),W=l("li"),zs=r("런타임 방식으로 css in js 방식을 통해서 동적으로 style을 생성하여 적용해줍니다."),Gs=c(),X=l("li"),Vs=r("(지금 개발자 도구를 열어서 아무 엘리먼트나 class=“bg(red)” 를 한번 추가해보세요.)"),ks=c(),D=l("pre"),this.h()},l(s){k=e(s,"H1",{});var t=p(k);_=u(t,"AdorableCSS"),t.forEach(a),b=i(s),f=e(s,"BLOCKQUOTE",{});var Js=p(f);d=e(Js,"P",{});var Ks=p(d);vs=u(Ks,"⚡️ Rapid On-Demand Atomic CSS framework"),Ks.forEach(a),Js.forEach(a),Y=i(s),h=e(s,"H2",{});var Qs=p(h);_s=u(Qs,"Getting Started"),Qs.forEach(a),Z=i(s),y=e(s,"PRE",{class:!0});var La=p(y);La.forEach(a),ss=i(s),M=e(s,"BLOCKQUOTE",{});var gs=p(M);j=e(gs,"P",{});var Fs=p(j);ds=u(Fs,"라이브러리 설치 후 3가지 방법으로 사용할 수 있습니다."),Fs.forEach(a),gs.forEach(a),as=i(s),E=e(s,"OL",{});var $=p(E);A=e($,"LI",{});var Ws=p(A);Es=u(Ws,"vite 기반의 프로젝트를 사용하고 있다면 vite 플러그인을 사용하는 것을 추천합니다. vite 플러그인으로 만들경우 런타임 비용이 0이 됩니다."),Ws.forEach(a),Ss=i($),B=e($,"LI",{});var Xs=p(B);bs=u(Xs,"그 외에도 css in js 방식으로 사용할 수 있습니다."),Xs.forEach(a),ws=i($),U=e($,"LI",{});var Ys=p(U);Ls=u(Ys,"CDN을 통해서 설치없이도 간편하게 사용할 수 있습니다."),Ys.forEach(a),$.forEach(a),ns=i(s),q=e(s,"H3",{});var Zs=p(q);ys=u(Zs,"Vite (Recommanded)"),Zs.forEach(a),ts=i(s),S=e(s,"UL",{});var T=p(S);N=e(T,"LI",{});var sa=p(N);Cs=u(sa,"Build-time에서 최종 css를 만들어냅니다. (zero run-time)"),sa.forEach(a),xs=i(T),z=e(T,"LI",{});var aa=p(z);Is=u(aa,"최종적으로 만들어진 css를 통해서 런타임 비용을 더 줄일 수 있고 css의 캐싱 기능을 더 활용할 수 있습니다."),aa.forEach(a),Rs=i(T),G=e(T,"LI",{});var na=p(G);Ds=u(na,"단, 빌드시에만 css를 만들어내기 때문에 동적으로 class를 추가하면 바로 적용되지 않습니다."),na.forEach(a),T.forEach(a),ls=i(s),C=e(s,"PRE",{class:!0});var ya=p(C);ya.forEach(a),es=i(s),x=e(s,"PRE",{class:!0});var Ca=p(x);Ca.forEach(a),ps=i(s),O=e(s,"H3",{});var ta=p(O);Hs=u(ta,"CSS in JS"),ta.forEach(a),os=i(s),I=e(s,"PRE",{class:!0});var xa=p(I);xa.forEach(a),cs=i(s),R=e(s,"PRE",{class:!0});var Ia=p(R);Ia.forEach(a),is=i(s),m=e(s,"UL",{});var w=p(m);V=e(w,"LI",{});var la=p(V);hs=u(la,"스크립트를 통해서 css를 동적으로 생성하여 적용합니다."),la.forEach(a),Ms=i(w),J=e(w,"LI",{});var ea=p(J);qs=u(ea,"런타임 비용이 있습니다. (하지만 최소한의 비용입니다.)"),ea.forEach(a),Os=i(w),K=e(w,"LI",{});var pa=p(K);Ps=u(pa,"css in js 방식을 사용하고 싶다면 이 방법을 사용하세요."),pa.forEach(a),$s=i(w),Q=e(w,"LI",{});var oa=p(Q);Ts=u(oa,"100% 동적생성 방식이기 때문에 런타임에 class를 추가하면 바로 적용됩니다."),oa.forEach(a),w.forEach(a),rs=i(s),P=e(s,"H3",{});var ca=p(P);js=u(ca,"CDN"),ca.forEach(a),us=i(s),v=e(s,"UL",{});var L=p(v);g=e(L,"LI",{});var ia=p(g);As=u(ia,"⛱ vite, webpack, postcss등 다른 복잡한 설정 없이 그냥 script 한줄만 추가하면 adorableCSS를 사용할 수 있습니다."),ia.forEach(a),Bs=i(L),F=e(L,"LI",{});var ra=p(F);Us=u(ra,"⚡️ adorableCSS를 간편하게 쓰는 방법! body 맨 아래 스크립트만 추가하면 됩니다."),ra.forEach(a),Ns=i(L),W=e(L,"LI",{});var ua=p(W);zs=u(ua,"런타임 방식으로 css in js 방식을 통해서 동적으로 style을 생성하여 적용해줍니다."),ua.forEach(a),Gs=i(L),X=e(L,"LI",{});var ka=p(X);Vs=u(ka,"(지금 개발자 도구를 열어서 아무 엘리먼트나 class=“bg(red)” 를 한번 추가해보세요.)"),ka.forEach(a),L.forEach(a),ks=i(s),D=e(s,"PRE",{class:!0});var Ra=p(D);Ra.forEach(a),this.h()},h(){H(y,"class","language-sh"),H(C,"class","language-ts"),H(x,"class","language-tsx"),H(I,"class","language-sh"),H(R,"class","language-tsx"),H(D,"class","language-html")},m(s,t){o(s,k,t),n(k,_),o(s,b,t),o(s,f,t),n(f,d),n(d,vs),o(s,Y,t),o(s,h,t),n(h,_s),o(s,Z,t),o(s,y,t),y.innerHTML=_a,o(s,ss,t),o(s,M,t),n(M,j),n(j,ds),o(s,as,t),o(s,E,t),n(E,A),n(A,Es),n(E,Ss),n(E,B),n(B,bs),n(E,ws),n(E,U),n(U,Ls),o(s,ns,t),o(s,q,t),n(q,ys),o(s,ts,t),o(s,S,t),n(S,N),n(N,Cs),n(S,xs),n(S,z),n(z,Is),n(S,Rs),n(S,G),n(G,Ds),o(s,ls,t),o(s,C,t),C.innerHTML=da,o(s,es,t),o(s,x,t),x.innerHTML=Ea,o(s,ps,t),o(s,O,t),n(O,Hs),o(s,os,t),o(s,I,t),I.innerHTML=Sa,o(s,cs,t),o(s,R,t),R.innerHTML=ba,o(s,is,t),o(s,m,t),n(m,V),n(V,hs),n(m,Ms),n(m,J),n(J,qs),n(m,Os),n(m,K),n(K,Ps),n(m,$s),n(m,Q),n(Q,Ts),o(s,rs,t),o(s,P,t),n(P,js),o(s,us,t),o(s,v,t),n(v,g),n(g,As),n(v,Bs),n(v,F),n(F,Us),n(v,Ns),n(v,W),n(W,zs),n(v,Gs),n(v,X),n(X,Vs),o(s,ks,t),o(s,D,t),D.innerHTML=wa},p:fs,i:fs,o:fs,d(s){s&&a(k),s&&a(b),s&&a(f),s&&a(Y),s&&a(h),s&&a(Z),s&&a(y),s&&a(ss),s&&a(M),s&&a(as),s&&a(E),s&&a(ns),s&&a(q),s&&a(ts),s&&a(S),s&&a(ls),s&&a(C),s&&a(es),s&&a(x),s&&a(ps),s&&a(O),s&&a(os),s&&a(I),s&&a(cs),s&&a(R),s&&a(is),s&&a(m),s&&a(rs),s&&a(P),s&&a(us),s&&a(v),s&&a(ks),s&&a(D)}}}class $a extends fa{constructor(k){super(),ma(this,k,null,Pa,va,{})}}function Ta(ms){let k,_,b;return _=new $a({}),{c(){k=l("div"),Da(_.$$.fragment),this.h()},l(f){k=e(f,"DIV",{class:!0});var d=p(k);Ha(_.$$.fragment,d),d.forEach(a),this.h()},h(){H(k,"class","markdown p(20)")},m(f,d){o(f,k,d),ha(_,k,null),b=!0},p:fs,i(f){b||(Ma(_.$$.fragment,f),b=!0)},o(f){qa(_.$$.fragment,f),b=!1},d(f){f&&a(k),Oa(_)}}}class Aa extends fa{constructor(k){super(),ma(this,k,null,Ta,va,{})}}export{Aa as default};
